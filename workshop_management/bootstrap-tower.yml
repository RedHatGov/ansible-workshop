---
- hosts: tower
  gather_facts: no
  remote_user: ec2-user
  become: yes
  vars:
    aws_region: us-west-2
    aws_credential: bhirsch@redhat.com
    lab_user_credential: ansible-lab-instances
    lab_admin_credentials: ansible-lab-admin
    organizations:
      - name: Lab Organization
        description: Automation for Everyone Lab Organization
    teams:
      - name: Lab Team
        description: Automation for Everyone Lab Team
        organization: Lab Organization
    projects:
      - name: Lab Project
        description: Automation for Everyone Project
        organization: Lab Organization
        scm_type: git
        scm_url: https://github.com/bhirsch70/Ansible.git
        scm_branch: master
    users:
      - first_name: Student
        last_name: One
        username: student1
        email: student1@example.com
        password: student1
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
      - first_name: Student
        last_name: Two
        username: student2
        email: student2@example.com
        password: student2
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
      - first_name: Student
        last_name: Three
        username: student3
        email: student3@example.com
        password: student3
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
      - first_name: Student
        last_name: Four
        username: student4
        email: student4@example.com
        password: student4
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
      - first_name: Student
        last_name: Five
        username: student5
        email: student5@example.com
        password: student5
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
      - first_name: Student
        last_name: Six
        username: student6
        email: student6@example.com
        password: student6
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
      - first_name: Student
        last_name: Seven
        username: student7
        email: student7@example.com
        password: student7
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
      - first_name: Student
        last_name: Eight
        username: student8
        email: student8@example.com
        password: student8
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
      - first_name: Student
        last_name: Nine
        username: student9
        email: student9@example.com
        password: student9
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
      - first_name: Student
        last_name: Ten
        username: student10
        email: student10@example.com
        password: student10
        superuser: no
        auditor: no
        organization: Lab Organization
        team: Lab Team
  vars_prompt:
    - name: tower_cli_host
      prompt: What is the Tower hostname?
      default: ansible-tower-hirsch.c2spaas.com
    - name: tower_cli_user
      prompt: What is the Tower user for CLI access?
      default: admin
    - name: tower_cli_password
      prompt: What is the password for the Tower user for CLI access?
      private: yes
  tasks:
    - name: Ensure the tower-cli application is installed
      pip:
        name: ansible-tower-cli
        state: present

    - name: Create all organizations
      shell: >
        tower-cli organization create
        --name "{{ item.name }}"
        --description "{{ item.description }}"
        --force-on-exists
        --tower-host "{{ tower_cli_host }}"
        --tower-username "{{ tower_cli_user }}"
        --tower-password "{{ tower_cli_password }}"
      with_items: "{{ organizations }}"

    #- name: Create all teams
    #  shell: >
    #    tower-cli team create
    #    --name "{{ item.name }}"
    #    --description "{{ item.description }}"
    #    --organization "{{ item.organization }}"
    #    --force-on-exists
    #    --tower-host "{{ tower_cli_host }}"
    #    --tower-username "{{ tower_cli_user }}"
    #    --tower-password "{{ tower_cli_password }}"
    #  with_items: "{{ teams }}"

    - name: Create all projects
      shell: >
        tower-cli project create
        --name "{{ item.name }}"
        --description "{{ item.description }}"
        --organization "{{ item.organization }}"
        --scm-type "{{ item.scm_type }}"
        --scm-url "{{ item.scm_url }}"
        --scm-branch "{{ item.scm_branch }}"
        --scm-clean True
        --scm-delete-on-update True
        --scm-update-on-launch True
        --force-on-exists
        --tower-host "{{ tower_cli_host }}"
        --tower-username "{{ tower_cli_user }}"
        --tower-password "{{ tower_cli_password }}"
      with_items: "{{ projects }}"

    - name: Create all users
      shell: >
        tower-cli user create
        --first-name "{{ item.first_name }}"
        --last-name "{{ item.last_name }}"
        --username "{{ item.username }}"
        --email "{{ item.email }}"
        --is-superuser "{{ item.superuser | bool }}"
        --is-system-auditor "{{ item.auditor | bool }}"
        --password "{{ item.password }}"
        --force-on-exists
        --tower-host "{{ tower_cli_host }}"
        --tower-username "{{ tower_cli_user }}"
        --tower-password "{{ tower_cli_password }}"
      with_items: "{{ users }}"

    - name: Associate users with their organization
      shell: >
        tower-cli organization associate
        --user "{{ item.username }}"
        --organization "{{ item.organization }}"
        --tower-host "{{ tower_cli_host }}"
        --tower-username "{{ tower_cli_user }}"
        --tower-password "{{ tower_cli_password }}"
      with_items:
        - "{{ users }}"

    - name: Associate users with their teams
      shell: >
        tower-cli team associate
        --user "{{ item.username }}"
        --team "{{ item.team }}"
        --tower-host "{{ tower_cli_host }}"
        --tower-username "{{ tower_cli_user }}"
        --tower-password "{{ tower_cli_password }}"
      with_items:
        - "{{ users }}"

    - name: Create an inventory for each user
      shell: >
        tower-cli inventory create
        --name "{{ item.username }} inventory"
        --organization "{{ item.organization }}"
        --force-on-exists
        --tower-host "{{ tower_cli_host }}"
        --tower-username "{{ tower_cli_user }}"
        --tower-password "{{ tower_cli_password }}"
      with_items: "{{ users }}"

    - name: Set up each users inventory
      shell: >
        tower-cli group create
        --name "{{ aws_region }}"
        --inventory "{{ item.username }} inventory"
        --credential "{{ aws_credential }}"
        --source ec2
        --source-regions "{{ aws_region }}"
        --instance-filters "tag:ansible_lab=True"
        --overwrite True
        --overwrite-vars True
        --update-on-launch True
        --force-on-exists
        --tower-host "{{ tower_cli_host }}"
        --tower-username "{{ tower_cli_user }}"
        --tower-password "{{ tower_cli_password }}"
      with_items: "{{ users }}"
